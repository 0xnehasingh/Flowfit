(()=>{var e={};e.id=409,e.ids=[409],e.modules={2934:e=>{"use strict";e.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:e=>{"use strict";e.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:e=>{"use strict";e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},7790:e=>{"use strict";e.exports=require("assert")},8893:e=>{"use strict";e.exports=require("buffer")},4770:e=>{"use strict";e.exports=require("crypto")},7702:e=>{"use strict";e.exports=require("events")},2048:e=>{"use strict";e.exports=require("fs")},2615:e=>{"use strict";e.exports=require("http")},5240:e=>{"use strict";e.exports=require("https")},5807:e=>{"use strict";e.exports=require("module")},8216:e=>{"use strict";e.exports=require("net")},9801:e=>{"use strict";e.exports=require("os")},5315:e=>{"use strict";e.exports=require("path")},8621:e=>{"use strict";e.exports=require("punycode")},6162:e=>{"use strict";e.exports=require("stream")},4026:e=>{"use strict";e.exports=require("string_decoder")},2452:e=>{"use strict";e.exports=require("tls")},4175:e=>{"use strict";e.exports=require("tty")},7360:e=>{"use strict";e.exports=require("url")},1764:e=>{"use strict";e.exports=require("util")},2623:e=>{"use strict";e.exports=require("worker_threads")},1568:e=>{"use strict";e.exports=require("zlib")},6005:e=>{"use strict";e.exports=require("node:crypto")},2944:()=>{},8330:()=>{},3683:()=>{},4041:()=>{},5775:(e,t,r)=>{"use strict";r.r(t),r.d(t,{GlobalError:()=>s.a,__next_app__:()=>p,originalPathname:()=>d,pages:()=>u,routeModule:()=>f,tree:()=>c}),r(8777),r(2874),r(356);var o=r(7105),i=r(5265),n=r(157),s=r.n(n),a=r(4665),l={};for(let e in a)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(e)&&(l[e]=()=>a[e]);r.d(t,l);let c=["",{children:["/_not-found",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(r.t.bind(r,2874,23)),"next/dist/client/components/not-found-error"]}]},{}]},{layout:[()=>Promise.resolve().then(r.bind(r,356)),"/Users/0xnehasingh/Desktop/flow blockchain/frontend/src/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(r.t.bind(r,2874,23)),"next/dist/client/components/not-found-error"]}],u=[],d="/_not-found/page",p={require:r,loadChunk:()=>Promise.resolve()},f=new o.AppPageRouteModule({definition:{kind:i.x.APP_PAGE,page:"/_not-found/page",pathname:"/_not-found",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:c}})},4995:(e,t,r)=>{Promise.resolve().then(r.bind(r,1547)),Promise.resolve().then(r.bind(r,832))},2801:(e,t,r)=>{Promise.resolve().then(r.t.bind(r,3817,23)),Promise.resolve().then(r.t.bind(r,9323,23)),Promise.resolve().then(r.t.bind(r,2204,23)),Promise.resolve().then(r.t.bind(r,820,23)),Promise.resolve().then(r.t.bind(r,5915,23)),Promise.resolve().then(r.t.bind(r,1611,23))},1547:(e,t,r)=>{"use strict";r.d(t,{U:()=>a,default:()=>l});var o=r(9899),i=r(5507),n=r(1348);n.vc({"accessNode.api":"https://rest-testnet.onflow.org","discovery.wallet":"https://fcl-discovery.onflow.org/testnet/authn","app.detail.title":"FlowFit","app.detail.icon":"https://flowfit.app/logo.png","flow.network":"testnet","walletconnect.projectId":process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID,"service.openid.scopes":"email profile","fcl.accountProof.resolver":async()=>({appIdentifier:"FlowFit",nonce:Math.random().toString(36).substring(7)})});let s=(0,i.createContext)(void 0),a=()=>{let e=(0,i.useContext)(s);if(!e)throw Error("useFlow must be used within a FlowProvider");return e};function l({children:e}){let[t,r]=(0,i.useState)({loggedIn:!1}),[a,l]=(0,i.useState)(!0),[c,u]=(0,i.useState)(!1),d=async()=>{try{l(!0),await n.YR()}catch(e){console.error("Login error:",e)}finally{l(!1)}},p=async()=>{try{l(!0);let e=`
        import FlowFitToken from 0xTOKEN_ADDRESS
        
        transaction() {
          prepare(signer: AuthAccount) {
            // Create FlowFit token vault
            if signer.borrow<&FlowFitToken.Vault>(from: FlowFitToken.VaultStoragePath) == nil {
              signer.save(<-FlowFitToken.createEmptyVault(), to: FlowFitToken.VaultStoragePath)
              
              signer.link<&FlowFitToken.Vault{FungibleToken.Receiver}>(
                FlowFitToken.VaultPublicPath,
                target: FlowFitToken.VaultStoragePath
              )
              
              signer.link<&FlowFitToken.Vault{FungibleToken.Balance}>(
                FlowFitToken.VaultPublicPath,
                target: FlowFitToken.VaultStoragePath
              )
            }
            
            // Create Achievement NFT collection
            if signer.borrow<&AchievementNFT.Collection>(from: AchievementNFT.CollectionStoragePath) == nil {
              signer.save(<-AchievementNFT.createEmptyCollection(), to: AchievementNFT.CollectionStoragePath)
              
              signer.link<&AchievementNFT.Collection{NonFungibleToken.CollectionPublic, AchievementNFT.AchievementNFTCollectionPublic}>(
                AchievementNFT.CollectionPublicPath,
                target: AchievementNFT.CollectionStoragePath
              )
            }
            
            log("FlowFit account setup complete")
          }
        }
      `,t=await n.JG({cadence:e,proposer:n.w1,payer:n.w1,authorizations:[n.w1],limit:9999});await n.tx(t).onceSealed(),console.log("Account created successfully:",t)}catch(e){console.error("Account creation error:",e)}finally{l(!1)}},f=async e=>{try{l(!0),await n.YR({service:{f_type:"Service",f_vsn:"1.0.0",type:"authn",uid:`${e}-link`,endpoint:`https://fcl-discovery.onflow.org/testnet/authn/${e}`,provider:{name:e,icon:`https://flowfit.app/icons/${e}.png`,description:`Link your ${e} account for social recovery`}}}),u(!0)}catch(e){console.error("Account linking error:",e)}finally{l(!1)}},h=async(e,t=[])=>{try{let r=await n.JG({cadence:e,args:()=>t,proposer:n.w1,payer:n.w1,authorizations:[n.w1],limit:9999});return await n.tx(r).onceSealed(),r}catch(e){throw console.error("Transaction error:",e),e}},g=async(e,t=[])=>{try{return await n.IO({cadence:e,args:()=>t})}catch(e){throw console.error("Script execution error:",e),e}};return o.jsx(s.Provider,{value:{user:t,logIn:d,logOut:()=>{n._b(),u(!1)},loading:a,sendTransaction:h,executeScript:g,createAccount:p,linkAccount:f,isAccountLinked:c},children:e})}},356:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>u,metadata:()=>c});var o=r(5023),i=r(1661),n=r.n(i);r(1641);var s=r(2772);(0,s.createProxy)(String.raw`/Users/0xnehasingh/Desktop/flow blockchain/frontend/src/components/providers/FlowProvider.tsx#useFlow`);let a=(0,s.createProxy)(String.raw`/Users/0xnehasingh/Desktop/flow blockchain/frontend/src/components/providers/FlowProvider.tsx#default`);var l=r(9885);let c={title:"FlowFit - Gamified Fitness with Crypto Rewards",description:"The first verifiable fitness protocol on Flow that rewards users with tokens and NFTs for completing VRF-generated workout challenges.",keywords:["fitness","blockchain","flow","gamification","crypto","rewards","NFT","VRF"],authors:[{name:"FlowFit Team"}],metadataBase:new URL("https://flowfit.io"),openGraph:{title:"FlowFit - Gamified Fitness with Crypto Rewards",description:"Earn tokens and NFTs for completing workout challenges. Built on Flow blockchain.",url:"https://flowfit.io",siteName:"FlowFit",images:[{url:"/og-image.png",width:1200,height:630,alt:"FlowFit - Gamified Fitness"}],locale:"en_US",type:"website"},twitter:{card:"summary_large_image",title:"FlowFit - Gamified Fitness with Crypto Rewards",description:"Earn tokens and NFTs for completing workout challenges. Built on Flow blockchain.",images:["/og-image.png"]},robots:{index:!0,follow:!0}};function u({children:e}){return o.jsx("html",{lang:"en",suppressHydrationWarning:!0,children:o.jsx("body",{className:`${n().className} antialiased`,suppressHydrationWarning:!0,children:(0,o.jsxs)(a,{children:[o.jsx("div",{className:"min-h-screen",children:e}),o.jsx(l.x7,{position:"top-right",gutter:8,toastOptions:{duration:4e3,style:{background:"rgba(0, 0, 0, 0.8)",color:"#ffffff",border:"1px solid rgba(0, 212, 255, 0.3)",borderRadius:"16px",backdropFilter:"blur(20px)",boxShadow:"0 8px 32px rgba(0, 0, 0, 0.4)"},success:{iconTheme:{primary:"#00ff88",secondary:"#ffffff"},style:{border:"1px solid rgba(0, 255, 136, 0.3)"}},error:{iconTheme:{primary:"#ff006e",secondary:"#ffffff"},style:{border:"1px solid rgba(255, 0, 110, 0.3)"}},loading:{iconTheme:{primary:"#00d4ff",secondary:"#ffffff"},style:{border:"1px solid rgba(0, 212, 255, 0.3)"}}}})]})})})}},4440:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(t,{isNotFoundError:function(){return i},notFound:function(){return o}});let r="NEXT_NOT_FOUND";function o(){let e=Error(r);throw e.digest=r,e}function i(e){return"object"==typeof e&&null!==e&&"digest"in e&&e.digest===r}("function"==typeof t.default||"object"==typeof t.default&&null!==t.default)&&void 0===t.default.__esModule&&(Object.defineProperty(t.default,"__esModule",{value:!0}),Object.assign(t.default,t),e.exports=t.default)},8777:(e,t,r)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e,t){for(var r in t)Object.defineProperty(e,r,{enumerable:!0,get:t[r]})}(t,{PARALLEL_ROUTE_DEFAULT_PATH:function(){return i},default:function(){return n}});let o=r(4440),i="next/dist/client/components/parallel-route-default.js";function n(){(0,o.notFound)()}("function"==typeof t.default||"object"==typeof t.default&&null!==t.default)&&void 0===t.default.__esModule&&(Object.defineProperty(t.default,"__esModule",{value:!0}),Object.assign(t.default,t),e.exports=t.default)},1641:()=>{}};var t=require("../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[454],()=>r(5775));module.exports=o})();
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"f1849f7d9c8a\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/YjExYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcImYxODQ5ZjdkOWM4YVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/providers/FlowProvider.tsx":
/*!***************************************************!*\
  !*** ./src/components/providers/FlowProvider.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ FlowProvider; },\n/* harmony export */   useFlow: function() { return /* binding */ useFlow; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @onflow/fcl */ \"(app-pages-browser)/../node_modules/@onflow/fcl/dist/fcl.module.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/../node_modules/next/dist/build/polyfills/process.js\");\n/* __next_internal_client_entry_do_not_use__ useFlow,default auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n// Configure FCL for Flow Testnet with Account Linking\n_onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.config({\n    \"accessNode.api\": \"https://rest-testnet.onflow.org\",\n    \"discovery.wallet\": \"https://fcl-discovery.onflow.org/testnet/authn\",\n    \"app.detail.title\": \"FlowFit\",\n    \"app.detail.icon\": \"https://flowfit.app/logo.png\",\n    \"flow.network\": \"testnet\",\n    \"walletconnect.projectId\": process.env.NEXT_PUBLIC_WALLETCONNECT_PROJECT_ID,\n    // Account Linking Configuration\n    \"service.openid.scopes\": \"email profile\",\n    \"fcl.accountProof.resolver\": async ()=>({\n            appIdentifier: \"FlowFit\",\n            nonce: Math.random().toString(36).substring(7)\n        })\n});\nconst FlowContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst useFlow = ()=>{\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(FlowContext);\n    if (!context) {\n        throw new Error(\"useFlow must be used within a FlowProvider\");\n    }\n    return context;\n};\n_s(useFlow, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction FlowProvider(param) {\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        loggedIn: false\n    });\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [isAccountLinked, setIsAccountLinked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Listen for user authentication changes\n        const unsubscribe = _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.currentUser.subscribe(setUser);\n        setLoading(false);\n        return ()=>unsubscribe();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Check if account has linked services\n        if (user.loggedIn && user.services) {\n            const hasLinkedServices = user.services.some((service)=>{\n                var _service_provider;\n                return service.type === \"authn\" && ((_service_provider = service.provider) === null || _service_provider === void 0 ? void 0 : _service_provider.name) !== \"wallet\";\n            });\n            setIsAccountLinked(hasLinkedServices);\n        }\n    }, [\n        user\n    ]);\n    const logIn = async ()=>{\n        try {\n            setLoading(true);\n            await _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.authenticate();\n        } catch (error) {\n            console.error(\"Login error:\", error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const logOut = ()=>{\n        _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.unauthenticate();\n        setIsAccountLinked(false);\n    };\n    const createAccount = async ()=>{\n        try {\n            setLoading(true);\n            // Create account transaction with sponsored transactions enabled\n            const transactionCode = '\\n        import FlowFitToken from 0xTOKEN_ADDRESS\\n        \\n        transaction() {\\n          prepare(signer: AuthAccount) {\\n            // Create FlowFit token vault\\n            if signer.borrow<&FlowFitToken.Vault>(from: FlowFitToken.VaultStoragePath) == nil {\\n              signer.save(<-FlowFitToken.createEmptyVault(), to: FlowFitToken.VaultStoragePath)\\n              \\n              signer.link<&FlowFitToken.Vault{FungibleToken.Receiver}>(\\n                FlowFitToken.VaultPublicPath,\\n                target: FlowFitToken.VaultStoragePath\\n              )\\n              \\n              signer.link<&FlowFitToken.Vault{FungibleToken.Balance}>(\\n                FlowFitToken.VaultPublicPath,\\n                target: FlowFitToken.VaultStoragePath\\n              )\\n            }\\n            \\n            // Create Achievement NFT collection\\n            if signer.borrow<&AchievementNFT.Collection>(from: AchievementNFT.CollectionStoragePath) == nil {\\n              signer.save(<-AchievementNFT.createEmptyCollection(), to: AchievementNFT.CollectionStoragePath)\\n              \\n              signer.link<&AchievementNFT.Collection{NonFungibleToken.CollectionPublic, AchievementNFT.AchievementNFTCollectionPublic}>(\\n                AchievementNFT.CollectionPublicPath,\\n                target: AchievementNFT.CollectionStoragePath\\n              )\\n            }\\n            \\n            log(\"FlowFit account setup complete\")\\n          }\\n        }\\n      ';\n            const txId = await _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.mutate({\n                cadence: transactionCode,\n                proposer: _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.authz,\n                payer: _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.authz,\n                authorizations: [\n                    _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.authz\n                ],\n                limit: 9999\n            });\n            await _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.tx(txId).onceSealed();\n            console.log(\"Account created successfully:\", txId);\n        } catch (error) {\n            console.error(\"Account creation error:\", error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const linkAccount = async (provider)=>{\n        try {\n            setLoading(true);\n            // Use FCL's account linking for social recovery\n            await _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.authenticate({\n                service: {\n                    f_type: \"Service\",\n                    f_vsn: \"1.0.0\",\n                    type: \"authn\",\n                    uid: \"\".concat(provider, \"-link\"),\n                    endpoint: \"https://fcl-discovery.onflow.org/testnet/authn/\".concat(provider),\n                    provider: {\n                        name: provider,\n                        icon: \"https://flowfit.app/icons/\".concat(provider, \".png\"),\n                        description: \"Link your \".concat(provider, \" account for social recovery\")\n                    }\n                }\n            });\n            setIsAccountLinked(true);\n        } catch (error) {\n            console.error(\"Account linking error:\", error);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const sendTransaction = async function(code) {\n        let args = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n        try {\n            const txId = await _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.mutate({\n                cadence: code,\n                args,\n                proposer: _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.authz,\n                payer: _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.authz,\n                authorizations: [\n                    _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.authz\n                ],\n                limit: 9999\n            });\n            const result = await _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.tx(txId).onceSealed();\n            return txId;\n        } catch (error) {\n            console.error(\"Transaction error:\", error);\n            throw error;\n        }\n    };\n    const executeScript = async function(code) {\n        let args = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n        try {\n            const result = await _onflow_fcl__WEBPACK_IMPORTED_MODULE_2__.query({\n                cadence: code,\n                args\n            });\n            return result;\n        } catch (error) {\n            console.error(\"Script execution error:\", error);\n            throw error;\n        }\n    };\n    const value = {\n        user,\n        logIn,\n        logOut,\n        loading,\n        sendTransaction,\n        executeScript,\n        createAccount,\n        linkAccount,\n        isAccountLinked\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FlowContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/0xnehasingh/Desktop/flow blockchain/frontend/src/components/providers/FlowProvider.tsx\",\n        lineNumber: 229,\n        columnNumber: 5\n    }, this);\n}\n_s1(FlowProvider, \"+xxd7qMHStb5rOlp8gKNu+a2dRI=\");\n_c = FlowProvider;\nvar _c;\n$RefreshReg$(_c, \"FlowProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/providers/FlowProvider.tsx\n"));

/***/ })

});